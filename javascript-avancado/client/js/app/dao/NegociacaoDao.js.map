{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","Promise","resolve","reject","cursor","transaction","objectStore","openCursor","negociacoes","onsuccess","atual","event","target","result","dado","value","push","_data","_quantidade","_valor","continue","onerror","console","log","error","negociacao","request","add","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,uBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AACT,uCAAYC,UAAZ,EAAwB;AAAA;;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;iDAEY;AAAA;;AACT,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIC,SAAS,MAAKL,WAAL,CACRM,WADQ,CACI,CAAC,MAAKL,MAAN,CADJ,EACmB,WADnB,EAERM,WAFQ,CAEI,MAAKN,MAFT,EAGRO,UAHQ,EAAb;;AAKA,gCAAIC,cAAc,EAAlB;;AAEAJ,mCAAOK,SAAP,GAAmB,iBAAS;AACxB,oCAAIC,QAAQC,MAAMC,MAAN,CAAaC,MAAzB;;AAEA,oCAAIH,KAAJ,EAAW;AACP,wCAAII,OAAOJ,MAAMK,KAAjB;;AAEAP,gDAAYQ,IAAZ,CAAiB,IAAIpB,UAAJ,CAAekB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;;AAEAT,0CAAMU,QAAN;AACH,iCAND,MAMO;AACHlB,4CAAQM,WAAR;AACH;AACJ,6BAZD;;AAcAJ,mCAAOiB,OAAP,GAAiB,iBAAS;AACtBC,wCAAQC,GAAR,CAAYZ,MAAMC,MAAN,CAAaY,KAAzB;AACArB,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBA1BM,CAAP;AA2BH;;;6CAEQsB,U,EAAY;AAAA;;AACjB,+BAAO,IAAIxB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIuB,UAAU,OAAK3B,WAAL,CACTM,WADS,CACG,CAAC,OAAKL,MAAN,CADH,EACkB,WADlB,EAETM,WAFS,CAEG,OAAKN,MAFR,EAGT2B,GAHS,CAGLF,UAHK,CAAd;;AAKAC,oCAAQjB,SAAR,GAAoB,YAAM;AACtBP,wCAAQ,wBAAR;AACH,6BAFD;;AAIAwB,oCAAQL,OAAR,GAAkB,iBAAS;AACvBC,wCAAQC,GAAR,CAAYZ,MAAMC,MAAN,CAAaY,KAAzB;AACArB,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAdM,CAAP;AAeH;;;iDAEY;AAAA;;AACT,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAIuB,UAAU,OAAK3B,WAAL,CACTM,WADS,CACG,CAAC,OAAKL,MAAN,CADH,EACkB,WADlB,EAETM,WAFS,CAEG,OAAKN,MAFR,EAGT4B,KAHS,EAAd;;AAKAF,oCAAQjB,SAAR,GAAoB,YAAM;AACtBP,wCAAQ,kCAAR;AACH,6BAFD;;AAIAwB,oCAAQL,OAAR,GAAkB,iBAAS;AACvBC,wCAAQC,GAAR,CAAYZ,MAAMC,MAAN,CAAaY,KAAzB;AACArB,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBAdM,CAAP;AAeH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao.js';\r\n\r\nexport class NegociacaoDao {\r\n    constructor(connection) {\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    listaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let cursor = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = event => {\r\n                let atual = event.target.result;\r\n\r\n                if (atual) {\r\n                    var dado = atual.value;\r\n\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n\r\n                    atual.continue();\r\n                } else {\r\n                    resolve(negociacoes);\r\n                }\r\n            }\r\n\r\n            cursor.onerror = event => {\r\n                console.log(event.target.error);\r\n                reject(\"Não foi possível buscar as negociações\");\r\n            }\r\n        });\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .add(negociacao);\r\n\r\n            request.onsuccess = () => {\r\n                resolve(\"Adicionado com sucesso\");\r\n            }\r\n\r\n            request.onerror = event => {\r\n                console.log(event.target.error);\r\n                reject(\"Não foi possivel adicionar a negociacao\");\r\n            }\r\n        });\r\n    }\r\n\r\n    apagaTodos() {\r\n        return new Promise((resolve, reject) => {\r\n            let request = this._connection\r\n                .transaction([this._store], 'readwrite')\r\n                .objectStore(this._store)\r\n                .clear()\r\n\r\n            request.onsuccess = () => {\r\n                resolve(\"Negociações apagadas com sucesso\");\r\n            }\r\n\r\n            request.onerror = event => {\r\n                console.log(event.target.error);\r\n                reject(\"Não foi possivel apagar as negociacões\");\r\n            }\r\n        });\r\n    }\r\n}"]}